{"version":3,"sources":["utils/ApiReqeust.ts","utils/initExchange.ts","utils/getChartData.ts","components/charts/Chart.tsx","components/layouts/Sidebar.tsx","components/layouts/Container.tsx","utils/hooks.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["init","baseURI","requestInit","get","api","data","newBaseURI","undefined","url","URL","search","URLSearchParams","toString","Api","fetch","post","requestData","Object","assign","body","JSON","stringify","this","then","response","ok","json","Error","statusText","headers","Accept","process","REACT_APP_API_URL","CRO_USDT","a","huobipro","ccxt","exchangeClass","apiKey","secret","timeout","enableRateLimit","id","loadMarkets","huobiTradingPairs","fetchOHLCV","tradingPairs","keys","fetchHuobiproKline","tradingPair","timeframe","getDateStr","dateTime","date","Date","getFullYear","getMonth","getDate","calculateMA","dayCount","result","i","len","length","push","sum","j","toFixed","ComponentSubType","getOptions","pastCount","originIndex","candleData","dateTimes","dates","forEach","item","dateStr","completedFutureData","completedFutureAverageData","pastData","pastDates","futureData","futureAverageData","futureDates","pastAveragePrice","reversePastData","reverse","originItemData","originAveragePrice","Number","slice","index","averagePrice","openPrice","closePrice","lowestPrice","highestPrice","futureAveragePrice","reversePastDates","originDate","getPredictData","getCandleEmptyData","map","getEmptyData","lengendTime","completedCandleData","MA5Data","MA10Data","MA20Data","MA30Data","differ","leftRedundantData","candleDataLength","rightRedundantData","concat","rightEmptyLineData","rightEmptyData","legend","tooltip","trigger","axisPointer","animation","type","lineStyle","color","width","opacity","xAxis","axisLine","yAxis","scale","splitLine","show","grid","bottom","dataZoom","textStyle","handleIcon","dataBackground","areaStyle","start","series","name","itemStyle","color0","borderColor","borderColor0","showAllSymbol","normal","smooth","showSymbol","Chart","config","loading","chart","useRef","seriesName","useMemo","handleBarClick","useCallback","params","componentSubType","candlestick","option","current","setOption","useEffect","off","on","style","height","ref","node","echarts","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","SideBar","onChange","useState","tradingParis","setTradingParis","className","initialValues","onFinish","value","onFinishFailed","errorInfo","Item","label","showSearch","placeholder","optionFilterProp","filterOption","input","children","toLowerCase","indexOf","pair","htmlType","defaultConfigData","Container","setConfig","initResult","callback","options","optionsConfig","returnValue","setReturnValue","error","setError","setLoading","callFn","onFailed","onCompleted","args","_args","catch","err","console","finally","refetch","usePromiseCall","useAsyncCall","getkline","newConfig","assignConfig","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAiDe,IAjDf,WAGE,WAAYA,EAAmBC,GAAkB,IAAD,gCAFxCA,aAEwC,OADxCC,iBACwC,OAYhDC,IAAM,SACJC,GAGgB,IAFhBC,EAEe,uDAFH,GACZC,EACe,uCACTL,OAAyBM,IAAfD,EAA2B,EAAKL,QAAUK,EACpDE,EAAM,IAAIC,IAAIR,EAAUG,GAE9B,OADAI,EAAIE,OAAS,IAAIC,gBAAgBN,GAAMO,WAChCC,EAAIC,MAAMN,EAAII,WAAY,EAAKV,YAAaI,IApBL,KAsBhDS,KAAO,SACLX,GAGgB,IAFhBC,EAEe,uDAFH,GACZC,EACe,uCACTL,OAAyBM,IAAfD,EAA2B,EAAKL,QAAUK,EACpDE,EAAMP,EAAUG,EAClBY,EAAcC,OAAOC,OAAO,GAAI,EAAKhB,YAAa,CACpDiB,KAAMC,KAAKC,UAAUhB,KAEvB,OAAOQ,EAAIC,MAAMN,EAAKQ,EAAaV,IA/BnCgB,KAAKrB,QAAUA,EACfqB,KAAKpB,YAAcF,EALvB,iKAOE,SAAaI,EAAkBC,EAAWC,GACxC,OAAOQ,MAAMV,EAAKC,GAAMkB,MAAK,SAAAC,GAC3B,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAMH,EAASI,qBAZ/B,KAiDe,CARY,CACzBC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,mBAAoB,mBANDC,kJAAYC,mBAAqB,I,+CCrClDC,EAAW,WAEJjC,EAAI,uCAAG,gCAAAkC,EAAA,6DAKZC,EAAW,IAAIC,IAAKD,SAMP,UACbE,EAAgBD,IAAI,QACT,IAAIC,EAAc,CACjCC,OAAQ,eACRC,OAAQ,cACRC,QAAS,IACTC,iBAAiB,IAKAN,EAASO,GAtBV,SAuBcP,EAASQ,cAvBvB,cAuBZC,EAvBY,OAwBOA,EAAkBX,GAxBzB,UA2BGE,EAASU,WAAWZ,GA3BvB,wCAmDX,CACLa,aAAc7B,OAAO8B,KAAKH,KApDV,4CAAH,qDAwDJI,EAAkB,uCAAG,WAChCC,GADgC,6BAAAf,EAAA,6DAEhCgB,EAFgC,+BAEZ,KAEdf,EAAW,IAAIC,IAAKD,SAJM,SAKnBA,EAASU,WAAWI,EAAaC,GALd,mFAAH,sD,SCrDzBC,EAAa,SAACC,GAClB,IAAMC,EAAO,IAAIC,KAAKF,GAItB,MAHa,UAAMC,EAAKE,cAAX,YACXF,EAAKG,WAAa,EADP,YAETH,EAAKI,YAsDX,SAASC,EAAYC,EAAkBtD,GAErC,IADA,IAAIuD,EAAS,GACJC,EAAI,EAAGC,EAAMzD,EAAK0D,OAAQF,EAAIC,EAAKD,IAC1C,GAAIA,EAAIF,EACNC,EAAOI,KAAK,SADd,CAKA,IADA,IAAIC,EAAM,EACDC,EAAI,EAAGA,EAAIP,EAAUO,IAC5BD,GAAO5D,EAAKwD,EAAIK,GAAG,GAErBN,EAAOI,MAAMC,EAAMN,GAAUQ,QAAQ,IAEvC,OAAOP,EAUF,IClEFQ,EDkEQC,EAAa,SAAC,GAMN,IALnBhE,EAKkB,EALlBA,KACA4C,EAIkB,EAJlBA,YAIkB,IAHlBC,iBAGkB,MAHN,KAGM,MAFlBoB,iBAEkB,MAFN,GAEM,MADlBC,mBACkB,MADJlE,EAAK0D,OAAS,EACV,EACZS,EAAyB,GACzBC,EAAsB,GACtBC,EAAkB,GACxBrE,EAAKsE,SAAQ,SAAAC,GACX,IAAMC,EAAU1B,EAAWyB,EAAK,IAChCH,EAAUT,KAAKY,EAAK,IACpBF,EAAMV,KAAKa,GACXL,EAAWR,KAAK,CAACY,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,QAGnD,IAwBIE,EACAC,EApCc,EA/EG,SACrBC,EACAC,GAMA,IAAMC,EAAyB,GACzBC,EAA8B,GAC9BC,EAAwB,GACxBC,EAA6B,GAC7BC,EAAkB,YAAIN,GAAUO,UAChCC,EAAiBF,EAAgB,GACjCG,EAAqBC,SACvBF,EAAe,GAAKA,EAAe,IAAM,GAAGrB,QAAQ,IAEhCqB,EAAe,GACdA,EAAe,GACdA,EAAe,GACdA,EAAe,GAE1CF,EAAgBK,MAAM,GAAGhB,SAAQ,SAACC,EAAMgB,GACtC,IAAMC,EAAeH,SAASd,EAAK,GAAKA,EAAK,IAAM,GAAGT,QAAQ,IAC9DkB,EAAiBrB,KAAK6B,GAGtB,IAAMC,EAAYJ,QAAQ,EAAID,EAAqBb,EAAK,IAAIT,QAAQ,IAC9D4B,EAAaL,QAAQ,EAAID,EAAqBb,EAAK,IAAIT,QAAQ,IAC/D6B,EAAcN,QAAQ,EAAID,EAAqBb,EAAK,IAAIT,QAAQ,IAChE8B,EAAeP,QAAQ,EAAID,EAAqBb,EAAK,IAAIT,QAAQ,IACjE+B,EAAqBR,QACxB,EAAID,EAAqBI,GAAc1B,QAAQ,IAElDgB,EAAkBnB,KAAKkC,GACvBhB,EAAWlB,KAAK,CAAC8B,EAAWC,EAAYC,EAAaC,OAGvD,IAAME,EAAmB,YAAIlB,GAAWM,UAClCa,EAAaD,EAAiB,GAIpC,OAHAA,EAAiBR,MAAM,GAAGhB,SAAQ,SAACC,EAAMgB,GACvCR,EAAYpB,KAAKb,EAAW,EAAIiD,EAAaxB,OAExC,CACLM,aACAC,oBACAC,eAqDqDiB,CATxB7B,EAAWmB,MACxCpB,EAAcD,EACdC,EAAc,GAEUE,EAAUkB,MAClCpB,EAAcD,EACdC,EAAc,IAGRW,EApBU,EAoBVA,WAAYE,EApBF,EAoBEA,YAAaD,EApBf,EAoBeA,kBAK3BmB,EAAqB,SAACjG,GAC1B,OAAOA,EAAKkG,KAAI,iBAAM,CAAC,IAAK,IAAK,IAAK,SAElCC,EAAe,SAACnG,GACpB,OAAOA,EAAKkG,KAAI,iBAAM,QAGlBE,EAAW,UAAMxD,EAAN,YAAqBC,GAElCwD,EAA6BlC,EAG7BmC,EAAiBjD,EAAY,EAAGc,GAChCoC,EAAkBlD,EAAY,GAAIc,GAClCqC,EAAkBnD,EAAY,GAAIc,GAClCsC,EAAkBpD,EAAY,GAAIc,GAChCuC,EAASvC,EAAWT,OAAS,EAAIQ,EACvC,GAAIwC,EAAS,EAAG,CACd,IAAMC,EAAoBxC,EAAWmB,MAAM,EAAGpB,EAAc,GAC5D,GAAIwC,EAASzC,EAAW,CAEtB,IAAM2C,EAAmBzC,EAAWT,OAI9BmD,GAHNpC,EAAsBwB,EAAmBU,GAAmBG,OAC1DjC,IAE6CS,MAAMsB,GAC/CG,EAAqBZ,EACzB1B,EAAoBa,MAAMsB,IAE5BP,EAAsBA,EAAoBS,OACxCb,EAAmBY,IAErBP,EAAUA,EAAQQ,OAAOC,GACzBR,EAAWA,EAASO,OAAOC,GAC3BP,EAAWA,EAASM,OAAOC,GAC3BN,EAAWA,EAASK,OAAOC,GAC3BrC,EAA6ByB,EAAaQ,GAAmBG,OAC3DhC,QAEG,GAAI4B,EAASzC,EAAW,CAE7B,IAAM4C,EAAqB1C,EAAWmB,MAAMpB,EAAcD,EAAY,GACtEQ,EAAsBwB,EAAmBU,GACtCG,OAAOjC,GACPiC,OAAOb,EAAmBY,IAC7BnC,EAA6ByB,EAAaQ,GACvCG,OAAOhC,GACPgC,OAAOX,EAAaU,SAGvBpC,EAAsBwB,EAAmBU,GAAmBG,OAC1DjC,GAEFH,EAA6ByB,EAAaQ,GAAmBG,OAC3DjC,OAGC,CAELwB,EAAuBlC,EAAmB2C,OACxCb,EAAmBpB,IAErB,IAAMmC,EAAiBb,EAAatB,GACpCyB,EAAUA,EAAQQ,OAAOE,GACzBT,EAAWA,EAASO,OAAOE,GAC3BR,EAAWA,EAASM,OAAOE,GAC3BP,EAAWA,EAASK,OAAOE,GAC3BvC,EAAsBwB,EAAmB9B,GAAY2C,OACnDjC,GAEFH,EAA6ByB,EAAahC,GAAY2C,OACpDhC,GAoJJ,MAhJmC,CACjCmC,OAAQ,CACNjH,KAAM,CACJoG,EACA,SACA,iBACA,MACA,OACA,OACA,SAIJc,QAAS,CACPC,QAAS,OACTC,YAAa,CACXC,WAAW,EACXC,KAAM,QACNC,UAAW,CACTC,MAAO,UACPC,MAAO,EACPC,QAAS,KAIfC,MAAO,CACLL,KAAM,WACNtH,KAAMqE,EAAMyC,OAAO/B,GACnB6C,SAAU,CAAEL,UAAW,CAAEC,MAAO,aAElCK,MAAO,CACLC,OAAO,EACPF,SAAU,CAAEL,UAAW,CAAEC,MAAO,YAChCO,UAAW,CAAEC,MAAM,IAErBC,KAAM,CACJC,OAAQ,IAEVC,SAAU,CACR,CACEC,UAAW,CACTZ,MAAO,WAETa,WACE,4MACFC,eAAgB,CACdC,UAAW,CACTf,MAAO,WAETD,UAAW,CACTG,QAAS,GACTF,MAAO,YAIXgB,MAAO,IAET,CACElB,KAAM,WAGVmB,OAAQ,CACN,CACEnB,KAAM,cACNoB,KAAMtC,EACNpG,KAAMqG,EACNsC,UAAW,CACTnB,MAAO,UACPoB,OAAQ,UACRC,YAAa,UACbC,aAAc,YAGlB,CACEJ,KAAM,SACNpB,KAAM,cACNtH,KAAMyE,EACNsE,eAAe,EACfJ,UAAW,CACTK,OAAQ,CACNxB,MAAO,OACPoB,OAAQ,OACRC,YAAa,OACbC,aAAc,UAIpB,CACEJ,KAAM,iBACNpB,KAAM,OACNtH,KAAM0E,EACNuE,QAAQ,EACRC,YAAY,EACZP,UAAW,CACTnB,MAAO,QAETD,UAAW,CACTE,MAAO,EACPD,MAAO,SAGX,CACEkB,KAAM,MACNpB,KAAM,OACNtH,KAAMsG,EACN2C,QAAQ,EACRC,YAAY,EACZ3B,UAAW,CACTE,MAAO,IAGX,CACEiB,KAAM,OACNpB,KAAM,OACNtH,KAAMuG,EACN0C,QAAQ,EACRC,YAAY,EACZ3B,UAAW,CACTE,MAAO,IAGX,CACEiB,KAAM,OACNpB,KAAM,OACNtH,KAAMwG,EACNyC,QAAQ,EACRC,YAAY,EACZ3B,UAAW,CACTE,MAAO,IAGX,CACEiB,KAAM,OACNpB,KAAM,OACNtH,KAAMyG,EACNwC,QAAQ,EACRC,YAAY,EACZ3B,UAAW,CACTE,MAAO,O,kBCtTZ1D,K,0BAAAA,E,aAAAA,M,KASL,IA4EeoF,EA5EU,SAAC,GAInB,IAAD,IAHJC,OAAUxG,EAGN,EAHMA,YAAaC,EAGnB,EAHmBA,UAAWoB,EAG9B,EAH8BA,UAClCjE,EAEI,EAFJA,KACAqJ,EACI,EADJA,QAEMC,EAAQC,mBAERC,EAAaC,mBAAQ,2BAAS7G,EAAT,YAAwBC,KAAa,CAC9DA,EACAD,IAGI8G,EAAiBC,uBAAY,SAEjCC,GACC,IAAD,EAOI3I,KALFjB,EAFF,EAEEA,KACA4C,EAHF,EAGEA,YACAC,EAJF,EAIEA,UACAoB,EALF,EAKEA,UACAuF,EANF,EAMEA,WAGF,GACEI,EAAOC,mBAAqB9F,EAAiB+F,aAC7CF,EAAOJ,aAAeA,EACtB,CAAC,IAAD,EACMO,EAAS/F,EAAW,CACxBhE,OACA4C,cACAC,YACAoB,YACAC,YAAa0F,EAAO5J,KAAK,KAE3B,UAAAsJ,EAAMU,eAAN,SAAeC,UAAUF,MAG7B,IA0BA,OAxBAG,qBAAU,WACR,GAAKlK,GAASsJ,EAAMU,UAAWX,EAA/B,CAEA,IAAMU,EAAS/F,EAAW,CACxBhE,OACA4C,cACAC,YACAoB,cAGFqF,EAAMU,QAAQC,UAAUF,MACvB,CAAC/J,EAAM0J,EAAgBL,EAASpF,EAAWpB,EAAWD,IAEzDsH,qBAAU,WAAO,IAAD,IACd,UAAAZ,EAAMU,eAAN,SAAeG,IAAI,QAAST,GAC5B,UAAAJ,EAAMU,eAAN,SAAeI,GAAG,QAASV,EAAgB,CACzC1J,OACA4C,cACAC,YACAoB,YACAuF,iBAED,CAACxJ,EAAM0J,EAAgBzF,EAAWuF,EAAY3G,EAAWD,IAG1D,qBACEP,GAAG,QACHgI,MAAO,CAAE5C,MAAO,OAAQ6C,OAAQ,SAChCC,IAAK,SAAAC,GACEA,IACLlB,EAAMU,QAAUS,IAAaD,Q,uEC7F7BE,E,IAAAA,OAEFC,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAmGlBI,EAvFY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAU9B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAAc,EACpB8B,qBADoB,mBACrDC,EADqD,KACvCC,EADuC,KAc5D,OALAnB,qBAAU,WACRvK,IAAOuB,MAAK,YAAuB,IAApBuB,EAAmB,EAAnBA,aACb4I,EAAgB5I,QAEjB,IAED,qBAAK6I,UAAU,oBAAf,SACE,8CACMX,GADN,IAEEjC,KAAK,QACL6C,cAAenC,EACfoC,SAjBW,SAACC,GAChBP,EAASO,IAiBLC,eAfiB,SAACC,KAUpB,UAOE,kBAAMC,KAAN,CAAWC,MAAM,eAAenD,KAAK,cAArC,SACE,mBACEoD,YAAU,EACVzB,MAAO,CAAE5C,MAAO,KAChBsE,YAAY,kBACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOnC,GAAR,OACN,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQoC,SAASC,cAAcC,QAAQH,EAAME,iBAAkB,GANnE,gBASGhB,QATH,IASGA,OATH,EASGA,EAAclF,KAAI,SAAAoG,GAAI,OACrB,cAAC5B,EAAD,CAAQe,MAAOa,EAAf,SACGA,GADuBA,UAMhC,kBAAMV,KAAN,CAAWC,MAAM,aAAanD,KAAK,YAAnC,SACE,oBACEoD,YAAU,EACVzB,MAAO,CAAE5C,MAAO,KAChBsE,YAAY,kBACZC,iBAAiB,WAJnB,UAOE,cAACtB,EAAD,CAAQe,MAAM,KAAd,eAAuB,MAGvB,cAACf,EAAD,CAAQe,MAAM,KAAd,eAAuB,MAGvB,cAACf,EAAD,CAAQe,MAAM,KAAd,eAAuB,MAGvB,cAACf,EAAD,CAAQe,MAAM,MAAd,gBAAwB,OAGxB,cAACf,EAAD,CAAQe,MAAM,MAAd,gBAAwB,OAGxB,cAACf,EAAD,CAAQe,MAAM,KAAd,eAAuB,MAGvB,cAACf,EAAD,CAAQe,MAAM,KAAd,eAAuB,MAGvB,cAACf,EAAD,CAAQe,MAAM,KAAd,eAAuB,WAK3B,kBAAMG,KAAN,CAAWC,MAAM,aAAanD,KAAK,YAAnC,SACE,mBAAOpB,KAAK,aAEd,kBAAMsE,KAAN,2BAAeb,GAAf,aACE,mBAAQzD,KAAK,UAAUiF,SAAS,SAASlD,QAASA,EAAlD,8BC/FJmD,EAAgC,CACpC5J,YAFyB,WAGzBC,UAAW,KACXoB,UAAW,KA8BEwI,EA5BO,WAAO,IAAD,EACEtB,mBAAqBqB,GADvB,mBACnBpD,EADmB,KACXsD,EADW,KAQVC,ECuEX,SACLC,EACAC,GAUC,IAAD,EACwB1B,mBAAS0B,GAA1BC,EADP,sBAEsC3B,mBAAmB,MAFzD,mBAEO4B,EAFP,KAEoBC,EAFpB,OAG0B7B,mBAAS,MAHnC,mBAGO8B,EAHP,KAGcC,EAHd,OAI8B/B,oBAAS,GAJvC,mBAIO9B,EAJP,KAIgB8D,EAJhB,KAKMC,EAASzD,uBACb,WAAa,IAAC,IAAD,EAC+BmD,GAAiB,GAAnDO,EADG,EACHA,SAAUC,EADP,EACOA,YAAa1D,EADpB,EACoBA,OADpB,mBAAT2D,EAAS,yBAATA,EAAS,gBAEX,IAAMC,EAAQD,GAAc,CAAC3D,GAC7B,OAAOgD,EAAQ,WAAR,cAAYY,IAChBtM,MAAK,SAAAlB,GAKJ,OAJIA,GACFgN,EAAehN,GAEN,OAAXsN,QAAW,IAAXA,KAActN,GACPA,KAERyN,OAAM,SAAAC,GAIL,OAHAC,QAAQV,MAAMS,GACdR,EAASQ,GAAO,4CACR,OAARL,QAAQ,IAARA,KAAWK,GACJA,KAERE,SAAQ,WACPT,GAAW,QAGjB,CAACP,EAAUE,IAMb,OAHA5C,qBAAU,WACRkD,MACC,CAACA,IACG,CAAE7J,OAAQwJ,EAAaE,QAAO5D,UAASwE,QAAST,GDpHxBU,CALTnE,uBAAY,WAGhC,OAAOhH,EAF4B6J,EAAhB5J,YAAgB4J,EAA3B3J,aAGP,KACKU,OARkB,ECXrB,SACLqJ,EACAC,GAUC,IAAD,EACsC1B,mBAAmB,MADzD,mBACO4B,EADP,KACoBC,EADpB,OAE0B7B,mBAAS,MAFnC,mBAEO8B,EAFP,KAEcC,EAFd,OAG8B/B,oBAAS,GAHvC,mBAGO9B,EAHP,KAGgB8D,EAHhB,KA0BA,MAAO,CAtBQxD,uBACb,WAEE,OADAwD,GAAW,GACJP,EAAQ,WAAR,aACJ1L,MAAK,SAAAlB,GAIJ,OAHIA,GACFgN,EAAehN,GAEVA,KAERyN,OAAM,SAAAC,GAAQ,IAAD,EAIZ,OAHAC,QAAQV,MAAMS,GACdR,EAASQ,GAAO,sCACT,OAAPb,QAAO,IAAPA,GAAA,UAAAA,EAASQ,gBAAT,cAAAR,EAAoBa,GACbA,KAERE,SAAQ,WACPT,GAAW,QAGjB,CAACP,EAAUC,IAEG,CAAEtJ,OAAQwJ,EAAaE,QAAO5D,YDlBN0E,CAAapL,GAT3B,mBASnBqL,EATmB,YASPzK,EATO,EASPA,OAAQ8F,EATD,EASCA,QAS3B,OACE,sBAAKiC,UAAU,OAAf,UACE,cAAC,EAAD,CAASlC,OAAQA,EAAQ8B,SATZ,SAAC+C,GAChB,IAAMC,EAAY,2BAAQ9E,GAAW6E,GAC7BpL,EAA2BqL,EAA3BrL,UAAWD,EAAgBsL,EAAhBtL,YACnB8J,EAAUwB,GACVF,EAASpL,EAAaC,IAKyBwG,QAASA,IACtD,qBAAKiC,UAAU,SAAf,SACE,cAAC,EAAD,CAAOlC,OAAQA,EAAQpJ,KAAMuD,GAAUoJ,EAAYtD,QAASA,UExBrD8E,MARf,WACE,OACE,qBAAK7C,UAAU,MAAf,SACE,cAAC,EAAD,OCMS8C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpN,MAAK,YAAkD,IAA/CqN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d825fd42.chunk.js","sourcesContent":["export class Api {\n  private baseURI: string\n  private requestInit: RequestInit\n  constructor(init: RequestInit, baseURI: string) {\n    this.baseURI = baseURI\n    this.requestInit = init\n  }\n  static fetch(api: RequestInfo, data: any, newBaseURI?: string): Promise<any> {\n    return fetch(api, data).then(response => {\n      if (response.ok) {\n        return response.json()\n      }\n      throw new Error(response.statusText)\n    })\n  }\n  get = <T = any>(\n    api: RequestInfo,\n    data: any = {},\n    newBaseURI?: string\n  ): Promise<T> => {\n    const baseURI = newBaseURI === undefined ? this.baseURI : newBaseURI\n    const url = new URL(baseURI + api)\n    url.search = new URLSearchParams(data).toString()\n    return Api.fetch(url.toString(), this.requestInit, newBaseURI)\n  }\n  post = <T = any>(\n    api: RequestInfo,\n    data: any = {},\n    newBaseURI?: string\n  ): Promise<T> => {\n    const baseURI = newBaseURI === undefined ? this.baseURI : newBaseURI\n    const url = baseURI + api\n    let requestData = Object.assign({}, this.requestInit, {\n      body: JSON.stringify(data),\n    })\n    return Api.fetch(url, requestData, newBaseURI)\n  }\n}\n\nconst defaultBaseURI = process.env.REACT_APP_API_URL || ''\n\nconst defaultRequestInit = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest',\n  },\n}\n\nexport default new Api(defaultRequestInit, defaultBaseURI)\n","import ccxt, { Exchange } from 'ccxt'\n\nconst CRO_USDT = 'CRO/USDT'\n\nexport const init = async (): Promise<{\n  tradingPairs: string[]\n}> => {\n  // const kraken = new ccxt.kraken()\n  // const bitfinex = new ccxt.bitfinex({ verbose: true })\n  const huobipro = new ccxt.huobipro()\n  // const okcoinusd = new ccxt.okcoinusd({\n  //   apiKey: 'YOUR_PUBLIC_API_KEY',\n  //   secret: 'YOUR_SECRET_PRIVATE_KEY',\n  // })\n\n  const exchangeId = 'binance'\n  const exchangeClass = ccxt[exchangeId]\n  const exchange = new exchangeClass({\n    apiKey: 'YOUR_API_KEY',\n    secret: 'YOUR_SECRET',\n    timeout: 30000,\n    enableRateLimit: true,\n  })\n\n  // console.log(kraken.id, await kraken.loadMarkets())\n  // console.log(bitfinex.id, await bitfinex.loadMarkets())\n  const huobiproId = huobipro.id\n  const huobiTradingPairs = await huobipro.loadMarkets()\n  const CRO_USDT_MARKETS = huobiTradingPairs[CRO_USDT]\n  // console.log(huobiTradingPairs, 'huobiTradingPairs')\n  // console.log('market', CRO_USDT_MARKETS)\n  const market = await huobipro.fetchOHLCV(CRO_USDT)\n  // console.log('fetch market', market)\n\n  // console.log(kraken.id, await kraken.fetchOrderBook(kraken.symbols[0]))\n  // console.log(bitfinex.id, await bitfinex.fetchTicker('BTC/USD'))\n  // console.log(huobipro.id, await huobipro.fetchTrades(CRO_USDT))\n  // const CRO_USDT_TICKER = await huobipro.fetchTicker(CRO_USDT)\n  // console.log('ticker', CRO_USDT_TICKER)\n\n  // console.log(okcoinusd.id, await okcoinusd.fetchBalance())\n\n  // sell 1 BTC/USD for market price, sell a bitcoin for dollars immediately\n  // console.log(okcoinusd.id, await okcoinusd.createMarketSellOrder('BTC/USD', 1))\n\n  // buy 1 BTC/USD for $2500, you pay $2500 and receive ฿1 when the order is closed\n  // console.log(\n  //   okcoinusd.id,\n  //   await okcoinusd.createLimitBuyOrder('BTC/USD', 1, 2500.0)\n  // )\n\n  // pass/redefine custom exchange-specific order params: type, amount, price or whatever\n  // use a custom order type\n  // bitfinex.createLimitSellOrder('BTC/USD', 1, 10, { type: 'trailing-stop' })\n\n  return {\n    tradingPairs: Object.keys(huobiTradingPairs),\n  }\n}\n\nexport const fetchHuobiproKline = async (\n  tradingPair: string,\n  timeframe: string = '1d'\n) => {\n  const huobipro = new ccxt.huobipro()\n  return await huobipro.fetchOHLCV(tradingPair, timeframe)\n}\n","import ccxt, { OHLCV } from 'ccxt'\n\n// DateItem = [open, close, lowest, highest]\ntype DataItem = [number, number, number, number]\n\nexport type TimeFrame = '1d' | '1m' | '5m' | '15m' | '30m' | '1w' | '1M' | '1H'\n\nconst getDateStr = (dateTime: number): string => {\n  const date = new Date(dateTime)\n  const dateStr = `${date.getFullYear()}/${\n    date.getMonth() + 1\n  }/${date.getDate()}`\n  return dateStr\n}\n\nconst getPredictData = (\n  pastData: DataItem[],\n  pastDates: number[]\n): {\n  futureData: DataItem[]\n  futureAverageData: number[]\n  futureDates: string[]\n} => {\n  const futureData: DataItem[] = []\n  const futureAverageData: number[] = []\n  const futureDates: string[] = []\n  const pastAveragePrice: number[] = []\n  const reversePastData = [...pastData].reverse()\n  const originItemData = reversePastData[0]\n  const originAveragePrice = Number(\n    ((originItemData[3] + originItemData[2]) / 2).toFixed(4)\n  )\n  const originOpenPrice = originItemData[0]\n  const originClosePrice = originItemData[1]\n  const originLowestPrice = originItemData[2]\n  const originHighestPrice = originItemData[3]\n\n  reversePastData.slice(1).forEach((item, index) => {\n    const averagePrice = Number(((item[3] + item[2]) / 2).toFixed(4))\n    pastAveragePrice.push(averagePrice)\n    // exchange the price\n\n    const openPrice = Number((2 * originAveragePrice - item[1]).toFixed(4))\n    const closePrice = Number((2 * originAveragePrice - item[0]).toFixed(4))\n    const lowestPrice = Number((2 * originAveragePrice - item[3]).toFixed(4))\n    const highestPrice = Number((2 * originAveragePrice - item[2]).toFixed(4))\n    const futureAveragePrice = Number(\n      (2 * originAveragePrice - averagePrice).toFixed(4)\n    )\n    futureAverageData.push(futureAveragePrice)\n    futureData.push([openPrice, closePrice, lowestPrice, highestPrice])\n  })\n\n  const reversePastDates = [...pastDates].reverse()\n  const originDate = reversePastDates[0]\n  reversePastDates.slice(1).forEach((item, index) => {\n    futureDates.push(getDateStr(2 * originDate - item))\n  })\n  return {\n    futureData,\n    futureAverageData,\n    futureDates,\n  }\n}\n\nfunction calculateMA(dayCount: number, data: DataItem[]) {\n  let result = []\n  for (let i = 0, len = data.length; i < len; i++) {\n    if (i < dayCount) {\n      result.push('-')\n      continue\n    }\n    let sum = 0\n    for (let j = 0; j < dayCount; j++) {\n      sum += data[i - j][1]\n    }\n    result.push((sum / dayCount).toFixed(4))\n  }\n  return result\n}\n\ninterface OptionConfig {\n  data: OHLCV[]\n  tradingPair: string\n  timeframe?: TimeFrame\n  pastCount?: number\n  originIndex?: number\n}\nexport const getOptions = ({\n  data,\n  tradingPair,\n  timeframe = '1d',\n  pastCount = 30,\n  originIndex = data.length - 1,\n}: OptionConfig) => {\n  const candleData: DataItem[] = []\n  const dateTimes: number[] = []\n  const dates: string[] = []\n  data.forEach(item => {\n    const dateStr = getDateStr(item[0])\n    dateTimes.push(item[0])\n    dates.push(dateStr)\n    candleData.push([item[1], item[4], item[3], item[2]])\n  })\n\n  const selectedPastCandleData = candleData.slice(\n    originIndex - pastCount,\n    originIndex + 1\n  )\n  const selectedPastDates = dateTimes.slice(\n    originIndex - pastCount,\n    originIndex + 1\n  )\n\n  const { futureData, futureDates, futureAverageData } = getPredictData(\n    selectedPastCandleData,\n    selectedPastDates\n  )\n\n  const getCandleEmptyData = (data: any[]) => {\n    return data.map(() => ['-', '-', '-', '-'])\n  }\n  const getEmptyData = (data: any[]) => {\n    return data.map(() => '-')\n  }\n\n  const lengendTime = `${tradingPair} ${timeframe}`\n\n  let completedCandleData: any[] = candleData\n  let completedFutureData: any[]\n  let completedFutureAverageData: any[]\n  let MA5Data: any[] = calculateMA(5, candleData)\n  let MA10Data: any[] = calculateMA(10, candleData)\n  let MA20Data: any[] = calculateMA(20, candleData)\n  let MA30Data: any[] = calculateMA(30, candleData)\n  const differ = candleData.length - 1 - originIndex\n  if (differ > 0) {\n    const leftRedundantData = candleData.slice(0, originIndex + 1)\n    if (differ < pastCount) {\n      // use the past selected day as origin to predict past data and future data\n      const candleDataLength = candleData.length\n      completedFutureData = getCandleEmptyData(leftRedundantData).concat(\n        futureData as any\n      )\n      const rightRedundantData = completedFutureData.slice(candleDataLength)\n      const rightEmptyLineData = getEmptyData(\n        completedFutureData.slice(candleDataLength)\n      )\n      completedCandleData = completedCandleData.concat(\n        getCandleEmptyData(rightRedundantData)\n      )\n      MA5Data = MA5Data.concat(rightEmptyLineData)\n      MA10Data = MA10Data.concat(rightEmptyLineData)\n      MA20Data = MA20Data.concat(rightEmptyLineData)\n      MA30Data = MA30Data.concat(rightEmptyLineData)\n      completedFutureAverageData = getEmptyData(leftRedundantData).concat(\n        futureAverageData as any\n      )\n    } else if (differ > pastCount) {\n      // use the past selected day as origin to predict past data\n      const rightRedundantData = candleData.slice(originIndex + pastCount + 1)\n      completedFutureData = getCandleEmptyData(leftRedundantData)\n        .concat(futureData as any)\n        .concat(getCandleEmptyData(rightRedundantData) as any)\n      completedFutureAverageData = getEmptyData(leftRedundantData)\n        .concat(futureAverageData as any)\n        .concat(getEmptyData(rightRedundantData) as any)\n    } else {\n      // use the past selected day as origin to predict past data and the last predict date is today\n      completedFutureData = getCandleEmptyData(leftRedundantData).concat(\n        futureData as any\n      )\n      completedFutureAverageData = getEmptyData(leftRedundantData).concat(\n        futureData as any\n      )\n    }\n  } else {\n    // the origin is today\n    completedCandleData = (candleData as any).concat(\n      getCandleEmptyData(futureData)\n    )\n    const rightEmptyData = getEmptyData(futureData)\n    MA5Data = MA5Data.concat(rightEmptyData)\n    MA10Data = MA10Data.concat(rightEmptyData)\n    MA20Data = MA20Data.concat(rightEmptyData)\n    MA30Data = MA30Data.concat(rightEmptyData)\n    completedFutureData = getCandleEmptyData(candleData).concat(\n      futureData as any\n    )\n    completedFutureAverageData = getEmptyData(candleData).concat(\n      futureAverageData as any\n    )\n  }\n\n  let option: echarts.EChartOption = {\n    legend: {\n      data: [\n        lengendTime,\n        'Future',\n        'Future-average',\n        'MA5',\n        'MA10',\n        'MA20',\n        'MA30',\n      ],\n      // inactiveColor: '#777',\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        animation: false,\n        type: 'cross',\n        lineStyle: {\n          color: '#376df4',\n          width: 2,\n          opacity: 1,\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: dates.concat(futureDates),\n      axisLine: { lineStyle: { color: '#8392A5' } },\n    },\n    yAxis: {\n      scale: true,\n      axisLine: { lineStyle: { color: '#8392A5' } },\n      splitLine: { show: false },\n    },\n    grid: {\n      bottom: 80,\n    },\n    dataZoom: [\n      {\n        textStyle: {\n          color: '#8392A5',\n        },\n        handleIcon:\n          'path://M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n        dataBackground: {\n          areaStyle: {\n            color: '#8392A5',\n          },\n          lineStyle: {\n            opacity: 0.8,\n            color: '#8392A5',\n          },\n        },\n        // brushSelect: true,\n        start: 80,\n      },\n      {\n        type: 'inside',\n      },\n    ],\n    series: [\n      {\n        type: 'candlestick',\n        name: lengendTime,\n        data: completedCandleData,\n        itemStyle: {\n          color: '#FD1050',\n          color0: '#0CF49B',\n          borderColor: '#FD1050',\n          borderColor0: '#0CF49B',\n        },\n      },\n      {\n        name: 'Future',\n        type: 'candlestick',\n        data: completedFutureData,\n        showAllSymbol: true,\n        itemStyle: {\n          normal: {\n            color: '#ddd',\n            color0: '#ddd',\n            borderColor: '#ddd',\n            borderColor0: '#ddd',\n          },\n        },\n      },\n      {\n        name: 'Future-average',\n        type: 'line',\n        data: completedFutureAverageData,\n        smooth: true,\n        showSymbol: false,\n        itemStyle: {\n          color: '#000',\n        },\n        lineStyle: {\n          width: 1,\n          color: '#ccc',\n        },\n      },\n      {\n        name: 'MA5',\n        type: 'line',\n        data: MA5Data,\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 1,\n        },\n      },\n      {\n        name: 'MA10',\n        type: 'line',\n        data: MA10Data,\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 1,\n        },\n      },\n      {\n        name: 'MA20',\n        type: 'line',\n        data: MA20Data,\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 1,\n        },\n      },\n      {\n        name: 'MA30',\n        type: 'line',\n        data: MA30Data,\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 1,\n        },\n      },\n    ],\n  }\n\n  return option\n}\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport * as echarts from 'echarts'\nimport { getOptions, TimeFrame } from 'utils/getChartData'\nimport { OHLCV } from 'ccxt'\n\nimport { ConfigData } from '../layouts/Sidebar'\n\ninterface ClickEventContext {\n  data: OHLCV[]\n  seriesName: string\n  tradingPair: string\n  timeframe: TimeFrame\n  pastCount: number\n}\n\nenum ComponentSubType {\n  candlestick = 'candlestick',\n  line = 'line',\n}\ninterface Props {\n  config: ConfigData\n  data: OHLCV[] | null\n  loading: boolean\n}\nconst Chart: FC<Props> = ({\n  config: { tradingPair, timeframe, pastCount },\n  data,\n  loading,\n}) => {\n  const chart = useRef<echarts.ECharts>()\n\n  const seriesName = useMemo(() => `${tradingPair} ${timeframe}`, [\n    timeframe,\n    tradingPair,\n  ])\n\n  const handleBarClick = useCallback(function (\n    this: ClickEventContext,\n    params: any\n  ) {\n    let {\n      data,\n      tradingPair,\n      timeframe,\n      pastCount,\n      seriesName,\n    } = this as ClickEventContext\n\n    if (\n      params.componentSubType === ComponentSubType.candlestick &&\n      params.seriesName === seriesName\n    ) {\n      const option = getOptions({\n        data,\n        tradingPair,\n        timeframe,\n        pastCount,\n        originIndex: params.data[0],\n      })\n      chart.current?.setOption(option)\n    }\n  },\n  [])\n\n  useEffect(() => {\n    if (!data || !chart.current || loading) return\n\n    const option = getOptions({\n      data,\n      tradingPair,\n      timeframe,\n      pastCount,\n    })\n\n    chart.current.setOption(option)\n  }, [data, handleBarClick, loading, pastCount, timeframe, tradingPair])\n\n  useEffect(() => {\n    chart.current?.off('click', handleBarClick)\n    chart.current?.on('click', handleBarClick, {\n      data,\n      tradingPair,\n      timeframe,\n      pastCount,\n      seriesName,\n    })\n  }, [data, handleBarClick, pastCount, seriesName, timeframe, tradingPair])\n\n  return (\n    <div\n      id=\"kline\"\n      style={{ width: '100%', height: '100vh' }}\n      ref={node => {\n        if (!node) return\n        chart.current = echarts.init(node)\n      }}\n    ></div>\n  )\n}\n\nexport default Chart\n","import React, { FC, useEffect, useState } from 'react'\nimport { Form, Select, Button, Input } from 'antd'\nimport { ErrorListProps } from 'antd/lib/form'\nimport { TimeFrame } from '@src/utils/getChartData'\nimport { fetchHuobiproKline, init } from '@src/utils/initExchange'\nimport { OHLCV } from 'ccxt'\nimport { useAsyncCall } from '@src/utils/hooks'\n\nconst { Option } = Select\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n}\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n}\nexport interface ConfigData {\n  tradingPair: string\n  timeframe: TimeFrame\n  pastCount: number\n}\ninterface Props {\n  onChange: (data: ConfigData) => void\n  config: ConfigData\n  loading?: boolean\n}\nconst SideBar: FC<Props> = ({ onChange, config, loading }) => {\n  const [tradingParis, setTradingParis] = useState<string[]>()\n\n  const onFinish = (value: ConfigData) => {\n    onChange(value)\n  }\n  const onFinishFailed = (errorInfo: any) => {}\n  const handleTradingPairChange = () => {}\n\n  useEffect(() => {\n    init().then(({ tradingPairs }) => {\n      setTradingParis(tradingPairs)\n    })\n  }, [])\n  return (\n    <div className=\"w-370 py-32 px-md\">\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={config}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item label=\"Trading Pair\" name=\"tradingPair\">\n          <Select\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a person\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n              option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {tradingParis?.map(pair => (\n              <Option value={pair} key={pair}>\n                {pair}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Time frame\" name=\"timeframe\">\n          <Select\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a person\"\n            optionFilterProp=\"children\"\n          >\n            {/* '1d' | '1m' | '5m' | '15m' | '30m' | '1w' | '1M' | '1H' */}\n            <Option value=\"1d\" key=\"1d\">\n              1d\n            </Option>\n            <Option value=\"1m\" key=\"1m\">\n              1m\n            </Option>\n            <Option value=\"5m\" key=\"5m\">\n              5m\n            </Option>\n            <Option value=\"15m\" key=\"15m\">\n              15m\n            </Option>\n            <Option value=\"30m\" key=\"30m\">\n              30m\n            </Option>\n            <Option value=\"1w\" key=\"1w\">\n              1w\n            </Option>\n            <Option value=\"1M\" key=\"1M\">\n              1M\n            </Option>\n            <Option value=\"1H\" key=\"1H\">\n              1H\n            </Option>\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Past count\" name=\"pastCount\">\n          <Input type=\"number\" />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default SideBar\n","import { TimeFrame } from '@src/utils/getChartData'\nimport { useAsyncCall, useFetch, usePromiseCall } from '@src/utils/hooks'\nimport { fetchHuobiproKline } from '@src/utils/initExchange'\nimport React, { FC, useCallback, useEffect, useState } from 'react'\n\nimport Chart from '../charts/Chart'\n\nimport SideBar, { ConfigData } from './Sidebar'\n\nconst defaultTradingPair = 'CRO/USDT'\nconst defaultConfigData: ConfigData = {\n  tradingPair: defaultTradingPair,\n  timeframe: '1d',\n  pastCount: 100,\n}\nconst Container: FC = () => {\n  const [config, setConfig] = useState<ConfigData>(defaultConfigData)\n\n  const getKilineData = useCallback(() => {\n    const { timeframe, tradingPair } = defaultConfigData\n\n    return fetchHuobiproKline(tradingPair, timeframe)\n  }, [])\n  const { result: initResult } = usePromiseCall(getKilineData)\n  const [getkline, { result, loading }] = useAsyncCall(fetchHuobiproKline)\n\n  const onchange = (newConfig: ConfigData) => {\n    const assignConfig = { ...config, ...newConfig }\n    const { timeframe, tradingPair } = assignConfig\n    setConfig(assignConfig)\n    getkline(tradingPair, timeframe)\n  }\n\n  return (\n    <div className=\"flex\">\n      <SideBar config={config} onChange={onchange} loading={loading} />\n      <div className=\"flex-1\">\n        <Chart config={config} data={result || initResult} loading={loading} />\n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","import { useState, useCallback, useEffect, useMemo } from 'react'\n\nimport ApiReqeust from './ApiReqeust'\n\nexport function useAsyncCall<T>(\n  callback: (...args: any[]) => Promise<T>,\n  options?: {\n    onFailed?: (...args: any[]) => void\n  }\n): [\n  (...args: any[]) => Promise<T>,\n  {\n    result: T | null\n    loading: boolean\n    error: any\n  }\n] {\n  const [returnValue, setReturnValue] = useState<T | null>(null)\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const callFn = useCallback(\n    (...args) => {\n      setLoading(true)\n      return callback(...args)\n        .then(data => {\n          if (data) {\n            setReturnValue(data)\n          }\n          return data\n        })\n        .catch(err => {\n          console.error(err)\n          setError(err || 'error ocurred in useAsyncCall hook')\n          options?.onFailed?.(err)\n          return err\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    },\n    [callback, options]\n  )\n  return [callFn, { result: returnValue, error, loading }]\n}\n\nexport function useFetch<T>(\n  api: RequestInfo,\n  config?: {\n    params?: any\n    method?: 'get' | 'post'\n    onCompleted?: (data: T) => void\n    onFailed?: (error: any) => void\n  }\n) {\n  const [requestInfo] = useState(api)\n  const [requestConfig] = useState(config)\n\n  const [data, setData] = useState<T>()\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState()\n\n  const requestFn = useCallback(() => {\n    const { params, method = 'get', onCompleted, onFailed } =\n      requestConfig || {}\n    ApiReqeust[method]<T>(requestInfo, params)\n      .then(res => {\n        setData(res)\n        onCompleted?.(res)\n      })\n      .catch(err => {\n        setError(err)\n        onFailed?.(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [requestConfig, requestInfo])\n\n  useEffect(() => {\n    requestFn()\n  }, [requestFn])\n\n  const returnValue = useMemo(() => {\n    return {\n      loading,\n      data,\n      error,\n      refetch: requestFn,\n    }\n  }, [data, error, loading, requestFn])\n\n  return returnValue\n}\n\nexport function usePromiseCall<T>(\n  callback: (...args: any[]) => Promise<T>,\n  options?: {\n    params?: any\n    onCompleted?: (data: T) => void\n    onFailed?: (error: any) => void\n  }\n): {\n  refetch: (...args: any[]) => void\n  result: T | null\n  loading: boolean\n  error: any\n} {\n  const [optionsConfig] = useState(options)\n  const [returnValue, setReturnValue] = useState<T | null>(null)\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const callFn = useCallback(\n    (...args) => {\n      const { onFailed, onCompleted, params } = optionsConfig || {}\n      const _args = args ? args : [params]\n      return callback(..._args)\n        .then(data => {\n          if (data) {\n            setReturnValue(data)\n          }\n          onCompleted?.(data)\n          return data\n        })\n        .catch(err => {\n          console.error(err)\n          setError(err || 'error ocurred in useImmediatelyCall hook')\n          onFailed?.(err)\n          return err\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    },\n    [callback, optionsConfig]\n  )\n\n  useEffect(() => {\n    callFn()\n  }, [callFn])\n  return { result: returnValue, error, loading, refetch: callFn }\n}\n","import React from 'react'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport Container from '@components/layouts/Container'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container></Container>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}