{"version":3,"sources":["utils/initExchange.ts","utils/getChartData.ts","components/charts/Chart.tsx","utils/hooks.ts","components/layouts/Sidebar.tsx","components/layouts/Container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CRO_USDT","init","a","huobipro","ccxt","exchangeClass","apiKey","secret","timeout","enableRateLimit","id","loadMarkets","huobiTradingPairs","fetchOHLCV","tradingPairs","Object","keys","fetchHuobiproKlineOfCroUsdt","tradingPair","timeframe","getDateStr","dateTime","date","Date","getFullYear","getMonth","getDate","calculateMA","dayCount","data","result","i","len","length","push","sum","j","toFixed","ComponentSubType","getOptions","pastCount","originIndex","candleData","dateTimes","dates","forEach","item","dateStr","completedFutureData","completedFutureAverageData","pastData","pastDates","futureData","futureAverageData","futureDates","pastAveragePrice","reversePastData","reverse","originItemData","originAveragePrice","Number","slice","index","averagePrice","openPrice","closePrice","lowestPrice","highestPrice","futureAveragePrice","reversePastDates","originDate","getPredictData","getCandleEmptyData","map","getEmptyData","lengendTime","completedCandleData","MA5Data","MA10Data","MA20Data","MA30Data","differ","leftRedundantData","candleDataLength","rightRedundantData","concat","rightEmptyLineData","rightEmptyData","legend","tooltip","trigger","axisPointer","animation","type","lineStyle","color","width","opacity","xAxis","axisLine","yAxis","scale","splitLine","show","grid","bottom","dataZoom","textStyle","handleIcon","dataBackground","areaStyle","start","series","name","itemStyle","color0","borderColor","borderColor0","showAllSymbol","normal","smooth","showSymbol","Chart","config","chart","useRef","callback","options","useState","returnValue","setReturnValue","error","setError","loading","setLoading","useCallback","then","catch","err","console","onFailed","finally","useAsyncCall","getkline","useEffect","current","seriesName","option","setOption","on","params","componentSubType","candlestick","log","style","height","ref","node","echarts","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","SideBar","onChange","tradingParis","setTradingParis","className","initialValues","onFinish","value","onFinishFailed","errorInfo","Item","label","showSearch","placeholder","optionFilterProp","filterOption","input","children","toLowerCase","indexOf","pair","htmlType","defaultConfigData","Container","setConfig","newConfig","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAEMA,EAAW,WAEJC,EAAI,uCAAG,gCAAAC,EAAA,6DAKZC,EAAW,IAAIC,IAAKD,SAMP,UACbE,EAAgBD,IAAI,QACT,IAAIC,EAAc,CACjCC,OAAQ,eACRC,OAAQ,cACRC,QAAS,IACTC,iBAAiB,IAKAN,EAASO,GAtBV,SAuBcP,EAASQ,cAvBvB,cAuBZC,EAvBY,OAwBOA,EAAkBZ,GAxBzB,UA2BGG,EAASU,WAAWb,GA3BvB,wCAmDX,CACLc,aAAcC,OAAOC,KAAKJ,KApDV,4CAAH,qDAwDJK,EAA2B,uCAAG,WACzCC,GADyC,6BAAAhB,EAAA,6DAEzCiB,EAFyC,+BAErB,KAEdhB,EAAW,IAAIC,IAAKD,SAJe,SAK5BA,EAASU,WAAWK,EAAaC,GALL,mFAAH,sD,aCrDlCC,EAAa,SAACC,GAClB,IAAMC,EAAO,IAAIC,KAAKF,GAItB,MAHa,UAAMC,EAAKE,cAAX,YACXF,EAAKG,WAAa,EADP,YAETH,EAAKI,YAsDX,SAASC,EAAYC,EAAkBC,GAErC,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGC,EAAMH,EAAKI,OAAQF,EAAIC,EAAKD,IAC1C,GAAIA,EAAIH,EACNE,EAAOI,KAAK,SADd,CAKA,IADA,IAAIC,EAAM,EACDC,EAAI,EAAGA,EAAIR,EAAUQ,IAC5BD,GAAON,EAAKE,EAAIK,GAAG,GAErBN,EAAOI,MAAMC,EAAMP,GAAUS,QAAQ,IAEvC,OAAOP,EAUF,IChFFQ,EDgFQC,EAAa,SAAC,GAMN,IALnBV,EAKkB,EALlBA,KACAX,EAIkB,EAJlBA,YAIkB,IAHlBC,iBAGkB,MAHN,KAGM,MAFlBqB,iBAEkB,MAFN,GAEM,MADlBC,mBACkB,MADJZ,EAAKI,OAAS,EACV,EACZS,EAAyB,GACzBC,EAAsB,GACtBC,EAAkB,GACxBf,EAAKgB,SAAQ,SAAAC,GACX,IAAMC,EAAU3B,EAAW0B,EAAK,IAChCH,EAAUT,KAAKY,EAAK,IACpBF,EAAMV,KAAKa,GACXL,EAAWR,KAAK,CAACY,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,QAGnD,IAwBIE,EACAC,EApCc,EA/EG,SACrBC,EACAC,GAMA,IAAMC,EAAyB,GACzBC,EAA8B,GAC9BC,EAAwB,GACxBC,EAA6B,GAC7BC,EAAkB,YAAIN,GAAUO,UAChCC,EAAiBF,EAAgB,GACjCG,EAAqBC,SACvBF,EAAe,GAAKA,EAAe,IAAM,GAAGrB,QAAQ,IAEhCqB,EAAe,GACdA,EAAe,GACdA,EAAe,GACdA,EAAe,GAE1CF,EAAgBK,MAAM,GAAGhB,SAAQ,SAACC,EAAMgB,GACtC,IAAMC,EAAeH,SAASd,EAAK,GAAKA,EAAK,IAAM,GAAGT,QAAQ,IAC9DkB,EAAiBrB,KAAK6B,GAGtB,IAAMC,EAAYJ,QAAQ,EAAID,EAAqBb,EAAK,IAAIT,QAAQ,IAC9D4B,EAAaL,QAAQ,EAAID,EAAqBb,EAAK,IAAIT,QAAQ,IAC/D6B,EAAcN,QAAQ,EAAID,EAAqBb,EAAK,IAAIT,QAAQ,IAChE8B,EAAeP,QAAQ,EAAID,EAAqBb,EAAK,IAAIT,QAAQ,IACjE+B,EAAqBR,QACxB,EAAID,EAAqBI,GAAc1B,QAAQ,IAElDgB,EAAkBnB,KAAKkC,GACvBhB,EAAWlB,KAAK,CAAC8B,EAAWC,EAAYC,EAAaC,OAGvD,IAAME,EAAmB,YAAIlB,GAAWM,UAClCa,EAAaD,EAAiB,GAIpC,OAHAA,EAAiBR,MAAM,GAAGhB,SAAQ,SAACC,EAAMgB,GACvCR,EAAYpB,KAAKd,EAAW,EAAIkD,EAAaxB,OAExC,CACLM,aACAC,oBACAC,eAqDqDiB,CATxB7B,EAAWmB,MACxCpB,EAAcD,EACdC,EAAc,GAEUE,EAAUkB,MAClCpB,EAAcD,EACdC,EAAc,IAGRW,EApBU,EAoBVA,WAAYE,EApBF,EAoBEA,YAAaD,EApBf,EAoBeA,kBAK3BmB,EAAqB,SAAC3C,GAC1B,OAAOA,EAAK4C,KAAI,iBAAM,CAAC,IAAK,IAAK,IAAK,SAElCC,EAAe,SAAC7C,GACpB,OAAOA,EAAK4C,KAAI,iBAAM,QAGlBE,EAAW,UAAMzD,EAAN,YAAqBC,GAElCyD,EAA6BlC,EAG7BmC,EAAiBlD,EAAY,EAAGe,GAChCoC,EAAkBnD,EAAY,GAAIe,GAClCqC,EAAkBpD,EAAY,GAAIe,GAClCsC,EAAkBrD,EAAY,GAAIe,GAChCuC,EAASvC,EAAWT,OAAS,EAAIQ,EACvC,GAAIwC,EAAS,EAAG,CACd,IAAMC,EAAoBxC,EAAWmB,MAAM,EAAGpB,EAAc,GAC5D,GAAIwC,EAASzC,EAAW,CAEtB,IAAM2C,EAAmBzC,EAAWT,OAI9BmD,GAHNpC,EAAsBwB,EAAmBU,GAAmBG,OAC1DjC,IAE6CS,MAAMsB,GAC/CG,EAAqBZ,EACzB1B,EAAoBa,MAAMsB,IAE5BP,EAAsBA,EAAoBS,OACxCb,EAAmBY,IAErBP,EAAUA,EAAQQ,OAAOC,GACzBR,EAAWA,EAASO,OAAOC,GAC3BP,EAAWA,EAASM,OAAOC,GAC3BN,EAAWA,EAASK,OAAOC,GAC3BrC,EAA6ByB,EAAaQ,GAAmBG,OAC3DhC,QAEG,GAAI4B,EAASzC,EAAW,CAE7B,IAAM4C,EAAqB1C,EAAWmB,MAAMpB,EAAcD,EAAY,GACtEQ,EAAsBwB,EAAmBU,GACtCG,OAAOjC,GACPiC,OAAOb,EAAmBY,IAC7BnC,EAA6ByB,EAAaQ,GACvCG,OAAOhC,GACPgC,OAAOX,EAAaU,SAGvBpC,EAAsBwB,EAAmBU,GAAmBG,OAC1DjC,GAEFH,EAA6ByB,EAAaQ,GAAmBG,OAC3DjC,OAGC,CAELwB,EAAuBlC,EAAmB2C,OACxCb,EAAmBpB,IAErB,IAAMmC,EAAiBb,EAAatB,GACpCyB,EAAUA,EAAQQ,OAAOE,GACzBT,EAAWA,EAASO,OAAOE,GAC3BR,EAAWA,EAASM,OAAOE,GAC3BP,EAAWA,EAASK,OAAOE,GAC3BvC,EAAsBwB,EAAmB9B,GAAY2C,OACnDjC,GAEFH,EAA6ByB,EAAahC,GAAY2C,OACpDhC,GAoJJ,MAhJmC,CACjCmC,OAAQ,CACN3D,KAAM,CACJ8C,EACA,SACA,iBACA,MACA,OACA,OACA,SAIJc,QAAS,CACPC,QAAS,OACTC,YAAa,CACXC,WAAW,EACXC,KAAM,QACNC,UAAW,CACTC,MAAO,UACPC,MAAO,EACPC,QAAS,KAIfC,MAAO,CACLL,KAAM,WACNhE,KAAMe,EAAMyC,OAAO/B,GACnB6C,SAAU,CAAEL,UAAW,CAAEC,MAAO,aAElCK,MAAO,CACLC,OAAO,EACPF,SAAU,CAAEL,UAAW,CAAEC,MAAO,YAChCO,UAAW,CAAEC,MAAM,IAErBC,KAAM,CACJC,OAAQ,IAEVC,SAAU,CACR,CACEC,UAAW,CACTZ,MAAO,WAETa,WACE,4MACFC,eAAgB,CACdC,UAAW,CACTf,MAAO,WAETD,UAAW,CACTG,QAAS,GACTF,MAAO,YAIXgB,MAAO,IAET,CACElB,KAAM,WAGVmB,OAAQ,CACN,CACEnB,KAAM,cACNoB,KAAMtC,EACN9C,KAAM+C,EACNsC,UAAW,CACTnB,MAAO,UACPoB,OAAQ,UACRC,YAAa,UACbC,aAAc,YAGlB,CACEJ,KAAM,SACNpB,KAAM,cACNhE,KAAMmB,EACNsE,eAAe,EACfJ,UAAW,CACTK,OAAQ,CACNxB,MAAO,OACPoB,OAAQ,OACRC,YAAa,OACbC,aAAc,UAIpB,CACEJ,KAAM,iBACNpB,KAAM,OACNhE,KAAMoB,EACNuE,QAAQ,EACRC,YAAY,EACZP,UAAW,CACTnB,MAAO,QAETD,UAAW,CACTE,MAAO,EACPD,MAAO,SAGX,CACEkB,KAAM,MACNpB,KAAM,OACNhE,KAAMgD,EACN2C,QAAQ,EACRC,YAAY,EACZ3B,UAAW,CACTE,MAAO,IAGX,CACEiB,KAAM,OACNpB,KAAM,OACNhE,KAAMiD,EACN0C,QAAQ,EACRC,YAAY,EACZ3B,UAAW,CACTE,MAAO,IAGX,CACEiB,KAAM,OACNpB,KAAM,OACNhE,KAAMkD,EACNyC,QAAQ,EACRC,YAAY,EACZ3B,UAAW,CACTE,MAAO,IAGX,CACEiB,KAAM,OACNpB,KAAM,OACNhE,KAAMmD,EACNwC,QAAQ,EACRC,YAAY,EACZ3B,UAAW,CACTE,MAAO,O,kBCpUZ1D,K,0BAAAA,E,aAAAA,M,KAOL,IAoDeoF,EApDU,SAAC,GAEnB,IAAD,IADJC,OAAUzG,EACN,EADMA,YAAaC,EACnB,EADmBA,UAAWqB,EAC9B,EAD8BA,UAE5BoF,EAAQC,mBADV,ECfC,SACLC,EACAC,GAUC,IAAD,EACsCC,mBAAmB,MADzD,mBACOC,EADP,KACoBC,EADpB,OAE0BF,mBAAS,MAFnC,mBAEOG,EAFP,KAEcC,EAFd,OAG8BJ,oBAAS,GAHvC,mBAGOK,EAHP,KAGgBC,EAHhB,KA0BA,MAAO,CAtBQC,uBACb,WAEE,OADAD,GAAW,GACJR,EAAQ,WAAR,aACJU,MAAK,SAAA3G,GAIJ,OAHIA,GACFqG,EAAerG,GAEVA,KAER4G,OAAM,SAAAC,GAAQ,IAAD,EAIZ,OAHAC,QAAQR,MAAMO,GACdN,EAASM,GAAO,sCACT,OAAPX,QAAO,IAAPA,GAAA,UAAAA,EAASa,gBAAT,cAAAb,EAAoBW,GACbA,KAERG,SAAQ,WACPP,GAAW,QAGjB,CAACR,EAAUC,IAEG,CAAEjG,OAAQmG,EAAaE,QAAOE,YDrBfS,CAAa7H,GAFxC,mBAEG8H,EAFH,KAEejH,EAFf,KAEeA,OAoCnB,OAlCAkH,qBAAU,WACRD,EAAS7H,EAAaC,KACrB,CAAC4H,EAAU5H,EAAWD,IAEzB8H,qBAAU,WAAO,IAAD,EACd,GAAKlH,GAAW8F,EAAMqB,QAAtB,CAEA,IAAMC,EAAU,UAAMhI,EAAN,YAAqBC,GAC/BgI,EAAS5G,EAAW,CACxBV,KAAMC,EACNZ,cACAC,YACAqB,cAGFoF,EAAMqB,QAAQG,UAAUD,GACxB,UAAAvB,EAAMqB,eAAN,SAAeI,GAAG,SAAS,SAACC,GAC1B,GACEA,EAAOC,mBAAqBjH,EAAiBkH,aAC7CF,EAAOJ,aAAeA,EACtB,CAAC,IAAD,EACAP,QAAQc,IAAIH,EAAOzH,KAAK,IACxB,IAAMsH,EAAS5G,EAAW,CACxBV,KAAMC,EACNZ,cACAC,YACAqB,UAAW,IACXC,YAAa6G,EAAOzH,KAAK,KAE3B,UAAA+F,EAAMqB,eAAN,SAAeG,UAAUD,UAG5B,CAAC3G,EAAWV,EAAQX,EAAWD,IAGhC,qBACER,GAAG,QACHgJ,MAAO,CAAE1D,MAAO,OAAQ2D,OAAQ,SAChCC,IAAK,SAAAC,GACEA,IACLjC,EAAMqB,QAAUa,IAAaD,Q,uEEvD7BE,E,IAAAA,OAEFC,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAiGlBI,EAtFY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAU5C,EAAa,EAAbA,OAAa,EACXK,qBADW,mBAC5CwC,EAD4C,KAC9BC,EAD8B,KAanD,OALAzB,qBAAU,WACR/I,IAAOuI,MAAK,YAAuB,IAApB1H,EAAmB,EAAnBA,aACb2J,EAAgB3J,QAEjB,IAED,qBAAK4J,UAAU,oBAAf,SACE,8CACMV,GADN,IAEE/C,KAAK,QACL0D,cAAehD,EACfiD,SAjBW,SAACC,GAChBN,EAASM,IAiBLC,eAfiB,SAACC,KAUpB,UAOE,kBAAMC,KAAN,CAAWC,MAAM,eAAehE,KAAK,cAArC,SACE,mBACEiE,YAAU,EACVxB,MAAO,CAAE1D,MAAO,KAChBmF,YAAY,kBACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOnC,GAAR,OACN,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQoC,SAASC,cAAcC,QAAQH,EAAME,iBAAkB,GANnE,gBASGhB,QATH,IASGA,OATH,EASGA,EAAc/F,KAAI,SAAAiH,GAAI,OACrB,cAAC3B,EAAD,CAAQc,MAAOa,EAAf,SACGA,GADuBA,UAMhC,kBAAMV,KAAN,CAAWC,MAAM,aAAahE,KAAK,YAAnC,SACE,oBACEiE,YAAU,EACVxB,MAAO,CAAE1D,MAAO,KAChBmF,YAAY,kBACZC,iBAAiB,WAJnB,UAOE,cAACrB,EAAD,CAAQc,MAAM,KAAd,eAAuB,MAGvB,cAACd,EAAD,CAAQc,MAAM,KAAd,eAAuB,MAGvB,cAACd,EAAD,CAAQc,MAAM,KAAd,eAAuB,MAGvB,cAACd,EAAD,CAAQc,MAAM,MAAd,gBAAwB,OAGxB,cAACd,EAAD,CAAQc,MAAM,MAAd,gBAAwB,OAGxB,cAACd,EAAD,CAAQc,MAAM,KAAd,eAAuB,MAGvB,cAACd,EAAD,CAAQc,MAAM,KAAd,eAAuB,MAGvB,cAACd,EAAD,CAAQc,MAAM,KAAd,eAAuB,WAK3B,kBAAMG,KAAN,CAAWC,MAAM,aAAahE,KAAK,YAAnC,SACE,mBAAOpB,KAAK,aAEd,kBAAMmF,KAAN,2BAAeZ,GAAf,aACE,mBAAQvE,KAAK,UAAU8F,SAAS,SAAhC,8BC7FJC,EAAgC,CACpC1K,YAFyB,WAGzBC,UAAW,KACXqB,UAAW,KAkBEqJ,EAhBO,WAAO,IAAD,EACE7D,mBAAqB4D,GADvB,mBACnBjE,EADmB,KACXmE,EADW,KAM1B,OACE,sBAAKpB,UAAU,OAAf,UACE,cAAC,EAAD,CAAS/C,OAAQA,EAAQ4C,SALZ,SAACwB,GAChBD,EAAU,2BAAKnE,GAAWoE,OAKxB,qBAAKrB,UAAU,SAAf,SACE,cAAC,EAAD,CAAO/C,OAAQA,UCVRqE,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8960df6c.chunk.js","sourcesContent":["import ccxt, { Exchange } from 'ccxt'\n\nconst CRO_USDT = 'CRO/USDT'\n\nexport const init = async (): Promise<{\n  tradingPairs: string[]\n}> => {\n  // const kraken = new ccxt.kraken()\n  // const bitfinex = new ccxt.bitfinex({ verbose: true })\n  const huobipro = new ccxt.huobipro()\n  // const okcoinusd = new ccxt.okcoinusd({\n  //   apiKey: 'YOUR_PUBLIC_API_KEY',\n  //   secret: 'YOUR_SECRET_PRIVATE_KEY',\n  // })\n\n  const exchangeId = 'binance'\n  const exchangeClass = ccxt[exchangeId]\n  const exchange = new exchangeClass({\n    apiKey: 'YOUR_API_KEY',\n    secret: 'YOUR_SECRET',\n    timeout: 30000,\n    enableRateLimit: true,\n  })\n\n  // console.log(kraken.id, await kraken.loadMarkets())\n  // console.log(bitfinex.id, await bitfinex.loadMarkets())\n  const huobiproId = huobipro.id\n  const huobiTradingPairs = await huobipro.loadMarkets()\n  const CRO_USDT_MARKETS = huobiTradingPairs[CRO_USDT]\n  // console.log(huobiTradingPairs, 'huobiTradingPairs')\n  // console.log('market', CRO_USDT_MARKETS)\n  const market = await huobipro.fetchOHLCV(CRO_USDT)\n  // console.log('fetch market', market)\n\n  // console.log(kraken.id, await kraken.fetchOrderBook(kraken.symbols[0]))\n  // console.log(bitfinex.id, await bitfinex.fetchTicker('BTC/USD'))\n  // console.log(huobipro.id, await huobipro.fetchTrades(CRO_USDT))\n  // const CRO_USDT_TICKER = await huobipro.fetchTicker(CRO_USDT)\n  // console.log('ticker', CRO_USDT_TICKER)\n\n  // console.log(okcoinusd.id, await okcoinusd.fetchBalance())\n\n  // sell 1 BTC/USD for market price, sell a bitcoin for dollars immediately\n  // console.log(okcoinusd.id, await okcoinusd.createMarketSellOrder('BTC/USD', 1))\n\n  // buy 1 BTC/USD for $2500, you pay $2500 and receive ฿1 when the order is closed\n  // console.log(\n  //   okcoinusd.id,\n  //   await okcoinusd.createLimitBuyOrder('BTC/USD', 1, 2500.0)\n  // )\n\n  // pass/redefine custom exchange-specific order params: type, amount, price or whatever\n  // use a custom order type\n  // bitfinex.createLimitSellOrder('BTC/USD', 1, 10, { type: 'trailing-stop' })\n\n  return {\n    tradingPairs: Object.keys(huobiTradingPairs),\n  }\n}\n\nexport const fetchHuobiproKlineOfCroUsdt = async (\n  tradingPair: string,\n  timeframe: string = '1d'\n) => {\n  const huobipro = new ccxt.huobipro()\n  return await huobipro.fetchOHLCV(tradingPair, timeframe)\n}\n","import ccxt, { OHLCV } from 'ccxt'\n\n// DateItem = [open, close, lowest, highest]\ntype DataItem = [number, number, number, number]\n\nexport type TimeFrame = '1d' | '1m' | '5m' | '15m' | '30m' | '1w' | '1M' | '1H'\n\nconst getDateStr = (dateTime: number): string => {\n  const date = new Date(dateTime)\n  const dateStr = `${date.getFullYear()}/${\n    date.getMonth() + 1\n  }/${date.getDate()}`\n  return dateStr\n}\n\nconst getPredictData = (\n  pastData: DataItem[],\n  pastDates: number[]\n): {\n  futureData: DataItem[]\n  futureAverageData: number[]\n  futureDates: string[]\n} => {\n  const futureData: DataItem[] = []\n  const futureAverageData: number[] = []\n  const futureDates: string[] = []\n  const pastAveragePrice: number[] = []\n  const reversePastData = [...pastData].reverse()\n  const originItemData = reversePastData[0]\n  const originAveragePrice = Number(\n    ((originItemData[3] + originItemData[2]) / 2).toFixed(4)\n  )\n  const originOpenPrice = originItemData[0]\n  const originClosePrice = originItemData[1]\n  const originLowestPrice = originItemData[2]\n  const originHighestPrice = originItemData[3]\n\n  reversePastData.slice(1).forEach((item, index) => {\n    const averagePrice = Number(((item[3] + item[2]) / 2).toFixed(4))\n    pastAveragePrice.push(averagePrice)\n    // exchange the price\n\n    const openPrice = Number((2 * originAveragePrice - item[1]).toFixed(4))\n    const closePrice = Number((2 * originAveragePrice - item[0]).toFixed(4))\n    const lowestPrice = Number((2 * originAveragePrice - item[3]).toFixed(4))\n    const highestPrice = Number((2 * originAveragePrice - item[2]).toFixed(4))\n    const futureAveragePrice = Number(\n      (2 * originAveragePrice - averagePrice).toFixed(4)\n    )\n    futureAverageData.push(futureAveragePrice)\n    futureData.push([openPrice, closePrice, lowestPrice, highestPrice])\n  })\n\n  const reversePastDates = [...pastDates].reverse()\n  const originDate = reversePastDates[0]\n  reversePastDates.slice(1).forEach((item, index) => {\n    futureDates.push(getDateStr(2 * originDate - item))\n  })\n  return {\n    futureData,\n    futureAverageData,\n    futureDates,\n  }\n}\n\nfunction calculateMA(dayCount: number, data: DataItem[]) {\n  let result = []\n  for (let i = 0, len = data.length; i < len; i++) {\n    if (i < dayCount) {\n      result.push('-')\n      continue\n    }\n    let sum = 0\n    for (let j = 0; j < dayCount; j++) {\n      sum += data[i - j][1]\n    }\n    result.push((sum / dayCount).toFixed(4))\n  }\n  return result\n}\n\ninterface OptionConfig {\n  data: OHLCV[]\n  tradingPair: string\n  timeframe?: TimeFrame\n  pastCount?: number\n  originIndex?: number\n}\nexport const getOptions = ({\n  data,\n  tradingPair,\n  timeframe = '1d',\n  pastCount = 30,\n  originIndex = data.length - 1,\n}: OptionConfig) => {\n  const candleData: DataItem[] = []\n  const dateTimes: number[] = []\n  const dates: string[] = []\n  data.forEach(item => {\n    const dateStr = getDateStr(item[0])\n    dateTimes.push(item[0])\n    dates.push(dateStr)\n    candleData.push([item[1], item[4], item[3], item[2]])\n  })\n\n  const selectedPastCandleData = candleData.slice(\n    originIndex - pastCount,\n    originIndex + 1\n  )\n  const selectedPastDates = dateTimes.slice(\n    originIndex - pastCount,\n    originIndex + 1\n  )\n\n  const { futureData, futureDates, futureAverageData } = getPredictData(\n    selectedPastCandleData,\n    selectedPastDates\n  )\n\n  const getCandleEmptyData = (data: any[]) => {\n    return data.map(() => ['-', '-', '-', '-'])\n  }\n  const getEmptyData = (data: any[]) => {\n    return data.map(() => '-')\n  }\n\n  const lengendTime = `${tradingPair} ${timeframe}`\n\n  let completedCandleData: any[] = candleData\n  let completedFutureData: any[]\n  let completedFutureAverageData: any[]\n  let MA5Data: any[] = calculateMA(5, candleData)\n  let MA10Data: any[] = calculateMA(10, candleData)\n  let MA20Data: any[] = calculateMA(20, candleData)\n  let MA30Data: any[] = calculateMA(30, candleData)\n  const differ = candleData.length - 1 - originIndex\n  if (differ > 0) {\n    const leftRedundantData = candleData.slice(0, originIndex + 1)\n    if (differ < pastCount) {\n      // use the past selected day as origin to predict past data and future data\n      const candleDataLength = candleData.length\n      completedFutureData = getCandleEmptyData(leftRedundantData).concat(\n        futureData as any\n      )\n      const rightRedundantData = completedFutureData.slice(candleDataLength)\n      const rightEmptyLineData = getEmptyData(\n        completedFutureData.slice(candleDataLength)\n      )\n      completedCandleData = completedCandleData.concat(\n        getCandleEmptyData(rightRedundantData)\n      )\n      MA5Data = MA5Data.concat(rightEmptyLineData)\n      MA10Data = MA10Data.concat(rightEmptyLineData)\n      MA20Data = MA20Data.concat(rightEmptyLineData)\n      MA30Data = MA30Data.concat(rightEmptyLineData)\n      completedFutureAverageData = getEmptyData(leftRedundantData).concat(\n        futureAverageData as any\n      )\n    } else if (differ > pastCount) {\n      // use the past selected day as origin to predict past data\n      const rightRedundantData = candleData.slice(originIndex + pastCount + 1)\n      completedFutureData = getCandleEmptyData(leftRedundantData)\n        .concat(futureData as any)\n        .concat(getCandleEmptyData(rightRedundantData) as any)\n      completedFutureAverageData = getEmptyData(leftRedundantData)\n        .concat(futureAverageData as any)\n        .concat(getEmptyData(rightRedundantData) as any)\n    } else {\n      // use the past selected day as origin to predict past data and the last predict date is today\n      completedFutureData = getCandleEmptyData(leftRedundantData).concat(\n        futureData as any\n      )\n      completedFutureAverageData = getEmptyData(leftRedundantData).concat(\n        futureData as any\n      )\n    }\n  } else {\n    // the origin is today\n    completedCandleData = (candleData as any).concat(\n      getCandleEmptyData(futureData)\n    )\n    const rightEmptyData = getEmptyData(futureData)\n    MA5Data = MA5Data.concat(rightEmptyData)\n    MA10Data = MA10Data.concat(rightEmptyData)\n    MA20Data = MA20Data.concat(rightEmptyData)\n    MA30Data = MA30Data.concat(rightEmptyData)\n    completedFutureData = getCandleEmptyData(candleData).concat(\n      futureData as any\n    )\n    completedFutureAverageData = getEmptyData(candleData).concat(\n      futureAverageData as any\n    )\n  }\n\n  let option: echarts.EChartOption = {\n    legend: {\n      data: [\n        lengendTime,\n        'Future',\n        'Future-average',\n        'MA5',\n        'MA10',\n        'MA20',\n        'MA30',\n      ],\n      // inactiveColor: '#777',\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        animation: false,\n        type: 'cross',\n        lineStyle: {\n          color: '#376df4',\n          width: 2,\n          opacity: 1,\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: dates.concat(futureDates),\n      axisLine: { lineStyle: { color: '#8392A5' } },\n    },\n    yAxis: {\n      scale: true,\n      axisLine: { lineStyle: { color: '#8392A5' } },\n      splitLine: { show: false },\n    },\n    grid: {\n      bottom: 80,\n    },\n    dataZoom: [\n      {\n        textStyle: {\n          color: '#8392A5',\n        },\n        handleIcon:\n          'path://M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n        dataBackground: {\n          areaStyle: {\n            color: '#8392A5',\n          },\n          lineStyle: {\n            opacity: 0.8,\n            color: '#8392A5',\n          },\n        },\n        // brushSelect: true,\n        start: 80,\n      },\n      {\n        type: 'inside',\n      },\n    ],\n    series: [\n      {\n        type: 'candlestick',\n        name: lengendTime,\n        data: completedCandleData,\n        itemStyle: {\n          color: '#FD1050',\n          color0: '#0CF49B',\n          borderColor: '#FD1050',\n          borderColor0: '#0CF49B',\n        },\n      },\n      {\n        name: 'Future',\n        type: 'candlestick',\n        data: completedFutureData,\n        showAllSymbol: true,\n        itemStyle: {\n          normal: {\n            color: '#ddd',\n            color0: '#ddd',\n            borderColor: '#ddd',\n            borderColor0: '#ddd',\n          },\n        },\n      },\n      {\n        name: 'Future-average',\n        type: 'line',\n        data: completedFutureAverageData,\n        smooth: true,\n        showSymbol: false,\n        itemStyle: {\n          color: '#000',\n        },\n        lineStyle: {\n          width: 1,\n          color: '#ccc',\n        },\n      },\n      {\n        name: 'MA5',\n        type: 'line',\n        data: MA5Data,\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 1,\n        },\n      },\n      {\n        name: 'MA10',\n        type: 'line',\n        data: MA10Data,\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 1,\n        },\n      },\n      {\n        name: 'MA20',\n        type: 'line',\n        data: MA20Data,\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 1,\n        },\n      },\n      {\n        name: 'MA30',\n        type: 'line',\n        data: MA30Data,\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 1,\n        },\n      },\n    ],\n  }\n\n  return option\n}\n","import React, { FC, useEffect, useRef, useState } from 'react'\nimport * as echarts from 'echarts'\nimport { fetchHuobiproKlineOfCroUsdt } from 'utils/initExchange'\nimport { useAsyncCall } from 'utils/hooks'\nimport { getOptions } from 'utils/getChartData'\n\nimport { ConfigData } from '../layouts/Sidebar'\n\nenum ComponentSubType {\n  candlestick = 'candlestick',\n  line = 'line',\n}\ninterface Props {\n  config: ConfigData\n}\nconst Chart: FC<Props> = ({\n  config: { tradingPair, timeframe, pastCount },\n}) => {\n  const chart = useRef<echarts.ECharts>()\n  const [getkline, { result }] = useAsyncCall(fetchHuobiproKlineOfCroUsdt)\n\n  useEffect(() => {\n    getkline(tradingPair, timeframe)\n  }, [getkline, timeframe, tradingPair])\n\n  useEffect(() => {\n    if (!result || !chart.current) return\n\n    const seriesName = `${tradingPair} ${timeframe}`\n    const option = getOptions({\n      data: result,\n      tradingPair,\n      timeframe,\n      pastCount,\n    })\n\n    chart.current.setOption(option)\n    chart.current?.on('click', (params: any) => {\n      if (\n        params.componentSubType === ComponentSubType.candlestick &&\n        params.seriesName === seriesName\n      ) {\n        console.log(params.data[0])\n        const option = getOptions({\n          data: result,\n          tradingPair,\n          timeframe,\n          pastCount: 100,\n          originIndex: params.data[0],\n        })\n        chart.current?.setOption(option)\n      }\n    })\n  }, [pastCount, result, timeframe, tradingPair])\n\n  return (\n    <div\n      id=\"kline\"\n      style={{ width: '100%', height: '100vh' }}\n      ref={node => {\n        if (!node) return\n        chart.current = echarts.init(node)\n      }}\n    ></div>\n  )\n}\n\nexport default Chart\n","import { useState, useCallback } from 'react'\n\nexport function useAsyncCall<T>(\n  callback: (...args: any[]) => Promise<T>,\n  options?: {\n    onFailed?: (...args: any[]) => void\n  }\n): [\n  (...args: any[]) => Promise<T>,\n  {\n    result: T | null\n    loading: boolean\n    error: any\n  }\n] {\n  const [returnValue, setReturnValue] = useState<T | null>(null)\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const callFn = useCallback(\n    (...args) => {\n      setLoading(true)\n      return callback(...args)\n        .then(data => {\n          if (data) {\n            setReturnValue(data)\n          }\n          return data\n        })\n        .catch(err => {\n          console.error(err)\n          setError(err || 'error ocurred in useAsyncCall hook')\n          options?.onFailed?.(err)\n          return err\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    },\n    [callback, options]\n  )\n  return [callFn, { result: returnValue, error, loading }]\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport { Form, Select, Button, Input } from 'antd'\nimport { ErrorListProps } from 'antd/lib/form'\nimport { TimeFrame } from '@src/utils/getChartData'\nimport { init } from '@src/utils/initExchange'\n\nconst { Option } = Select\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n}\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n}\nexport interface ConfigData {\n  tradingPair: string\n  timeframe: TimeFrame\n  pastCount: number\n}\ninterface Props {\n  onChange: (data: ConfigData) => void\n  config: ConfigData\n}\nconst SideBar: FC<Props> = ({ onChange, config }) => {\n  const [tradingParis, setTradingParis] = useState<string[]>()\n  const onFinish = (value: ConfigData) => {\n    onChange(value)\n  }\n  const onFinishFailed = (errorInfo: any) => {}\n  const handleTradingPairChange = () => {}\n\n  useEffect(() => {\n    init().then(({ tradingPairs }) => {\n      setTradingParis(tradingPairs)\n    })\n  }, [])\n  return (\n    <div className=\"w-370 py-32 px-md\">\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={config}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item label=\"Trading Pair\" name=\"tradingPair\">\n          <Select\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a person\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n              option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {tradingParis?.map(pair => (\n              <Option value={pair} key={pair}>\n                {pair}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Time frame\" name=\"timeframe\">\n          <Select\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a person\"\n            optionFilterProp=\"children\"\n          >\n            {/* '1d' | '1m' | '5m' | '15m' | '30m' | '1w' | '1M' | '1H' */}\n            <Option value=\"1d\" key=\"1d\">\n              1d\n            </Option>\n            <Option value=\"1m\" key=\"1m\">\n              1m\n            </Option>\n            <Option value=\"5m\" key=\"5m\">\n              5m\n            </Option>\n            <Option value=\"15m\" key=\"15m\">\n              15m\n            </Option>\n            <Option value=\"30m\" key=\"30m\">\n              30m\n            </Option>\n            <Option value=\"1w\" key=\"1w\">\n              1w\n            </Option>\n            <Option value=\"1M\" key=\"1M\">\n              1M\n            </Option>\n            <Option value=\"1H\" key=\"1H\">\n              1H\n            </Option>\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Past count\" name=\"pastCount\">\n          <Input type=\"number\" />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default SideBar\n","import { TimeFrame } from '@src/utils/getChartData'\nimport React, { FC, useState } from 'react'\n\nimport Chart from '../charts/Chart'\n\nimport SideBar, { ConfigData } from './Sidebar'\n\nconst defaultTradingPair = 'CRO/USDT'\nconst defaultConfigData: ConfigData = {\n  tradingPair: defaultTradingPair,\n  timeframe: '1d',\n  pastCount: 100,\n}\nconst Container: FC = () => {\n  const [config, setConfig] = useState<ConfigData>(defaultConfigData)\n\n  const onchange = (newConfig: ConfigData) => {\n    setConfig({ ...config, ...newConfig })\n  }\n  return (\n    <div className=\"flex\">\n      <SideBar config={config} onChange={onchange} />\n      <div className=\"flex-1\">\n        <Chart config={config} />\n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","import React from 'react'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport Container from '@components/layouts/Container'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container></Container>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}